name: Check project

on:
  push:
    branches: ['dev', 'master', 'release/*']
  pull_request:
    branches: ['dev', 'master', 'release/*']
    types: [opened, reopened, synchronize]
  release:
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  lint:
    name: Lint (Python ${{ matrix.python-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          conda update -n base -c conda-canary -q --no-pin conda
          conda install --no-pin --file requirements.txt --file requirements-dev.txt pip
          pip install -r requirements-pip.txt
          python setup.py develop

      - name: Conda environment information
        id: conda_environment_information
        run: |
          conda info
          conda config --show
          conda list --show-channel-urls
          echo ::set-output name=exit_status::success

      - name: Check with pycodestyle
        if: ${{ always() && steps.conda_environment_information.outputs.exit_status == 'success' }}
        run: |
          mkdir -p .artifacts/reports
          make lint-pycodestyle > .artifacts/reports/pycodestyle.txt 2>&1

      - name: Check with bandit
        if: ${{ always() && steps.conda_environment_information.outputs.exit_status == 'success' }}
        run: |
          mkdir -p .artifacts/reports
          make lint-bandit > .artifacts/reports/bandit.txt 2>&1

      - name: Check with mypy
        if: ${{ always() && steps.conda_environment_information.outputs.exit_status == 'success' }}
        run: |
          mkdir -p .artifacts/reports
          make lint-mypy > .artifacts/reports/mypy.txt 2>&1

      - name: Check with pylint
        if: ${{ always() && steps.conda_environment_information.outputs.exit_status == 'success' }}
        run: |
          mkdir -p .artifacts/reports
          make lint-pylint > .artifacts/reports/pylint.txt 2>&1

      - name: Export reports
        if: ${{ always() && steps.conda_environment_information.outputs.exit_status == 'success' }}
        uses: actions/upload-artifact@v2
        with:
          name: report-lint-${{ matrix.python-version }}-${{ matrix.os }}
          path: .artifacts/reports
          retention-days: 7
  test_project:
    name: Test - Python ${{ matrix.python }} - ${{ matrix.os }}
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        python:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      # most of these steps might be anchored to corresponding ones in the "lint_code" job
      # unfortunately, as of June 2021 - GitHub doesn't support anchors for action scripts

      - name: Checkout project
        uses: actions/checkout@v2

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          auto-update-conda: true
          python-version: ${{ matrix.python }}

      - name: Install requirements
        run: |
          conda install -n test --file requirements.txt --file requirements-dev.txt

      - name: Conda environment information
        run: |
          conda info
          conda config --show
          conda list -n test --show-channel-urls

      - name: Run tests
        run: |
          mkdir .artifacts
          mkdir .artifacts/reports
          conda run -n test pytest binstar_client --cov=binstar_client --cov-report html:.artifacts/reports/coverage --html=.artifacts/reports/pytest.html --self-contained-html

      - name: Export pytest report
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: report-pytest-python-${{ matrix.python }}-${{ matrix.os }}
          path: .artifacts/reports/pytest.html
          retention-days: 7

      - name: Export coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: report-coverage-python-${{ matrix.python }}-${{ matrix.os }}
          path: .artifacts/reports/coverage
          retention-days: 7
